{"version":3,"sources":["vector/row.ts"],"names":[],"mappings":"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","file":"row.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { Vector } from '../vector';\r\nimport { StructVector } from './struct';\r\nimport { valueToString } from '../util/pretty';\r\nimport { DataType, Struct, RowLike } from '../type';\r\n\r\n/** @ignore */ const kParent = Symbol.for('parent');\r\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\r\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\r\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\r\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\r\n\r\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\r\n\r\n    public readonly size: number;\r\n    public readonly [Symbol.toStringTag]: string;\r\n\r\n    protected [kRowIndex]: number;\r\n    protected [kParent]: Vector<Struct>;\r\n    protected [kKeyToIdx]: Map<K, number>;\r\n    protected [kIdxToVal]: V[];\r\n\r\n    constructor(parent: Vector<Struct>, numKeys: number) {\r\n        this[kParent] = parent;\r\n        this.size = numKeys;\r\n    }\r\n\r\n    public abstract keys(): IterableIterator<K>;\r\n    public abstract values(): IterableIterator<V>;\r\n    public abstract getKey(idx: number): K;\r\n    public abstract getIndex(key: K): number;\r\n    public abstract getValue(idx: number): V;\r\n    public abstract setValue(idx: number, val: V): void;\r\n\r\n    public entries() { return this[Symbol.iterator](); }\r\n\r\n    public has(key: K) { return this.get(key) !== undefined; }\r\n\r\n    public get(key: K) {\r\n        let val = undefined;\r\n        if (key !== null && key !== undefined) {\r\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\r\n            let idx = ktoi.get(key);\r\n            if (idx !== undefined) {\r\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\r\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\r\n            } else if ((idx = this.getIndex(key)) > -1) {\r\n                ktoi.set(key, idx);\r\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\r\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    public set(key: K, val: V) {\r\n        if (key !== null && key !== undefined) {\r\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\r\n            let idx = ktoi.get(key);\r\n            if (idx === undefined) {\r\n                ktoi.set(key, idx = this.getIndex(key));\r\n            }\r\n            if (idx > -1) {\r\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\r\n                itov[idx] = <any> this.setValue(idx, val);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\r\n\r\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\r\n\r\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\r\n\r\n        const ki = this.keys();\r\n        const vi = this.values();\r\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\r\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\r\n\r\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\r\n            !((kr = ki.next()).done || (vr = vi.next()).done);\r\n            ++i\r\n        ) {\r\n            k = kr.value;\r\n            v = vr.value;\r\n            itov[i] = v;\r\n            ktoi.has(k) || ktoi.set(k, i);\r\n            yield [k, v];\r\n        }\r\n    }\r\n\r\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\r\n\r\n        const ki = this.keys();\r\n        const vi = this.values();\r\n        const callback = thisArg === undefined ? callbackfn :\r\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\r\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\r\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\r\n\r\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\r\n            !((kr = ki.next()).done || (vr = vi.next()).done);\r\n            ++i\r\n        ) {\r\n            k = kr.value;\r\n            v = vr.value;\r\n            itov[i] = v;\r\n            ktoi.has(k) || ktoi.set(k, i);\r\n            callback(v, k, this);\r\n        }\r\n    }\r\n\r\n    public toArray() { return [...this.values()]; }\r\n    public toJSON() {\r\n        const obj = {} as any;\r\n        this.forEach((val, key) => obj[key] = val);\r\n        return obj;\r\n    }\r\n\r\n    public inspect() { return this.toString(); }\r\n    public [kCustomInspect]() { return this.toString(); }\r\n    public toString() {\r\n        const str: string[] = [];\r\n        this.forEach((val, key) => {\r\n            key = valueToString(key);\r\n            val = valueToString(val);\r\n            str.push(`${key}: ${val}`);\r\n        });\r\n        return `{ ${str.join(', ')} }`;\r\n    }\r\n\r\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\r\n        Object.defineProperties(proto, {\r\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\r\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\r\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\r\n        });\r\n        return (proto as any)[Symbol.toStringTag] = 'Row';\r\n    })(Row.prototype);\r\n}\r\n\r\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\r\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\r\n        super(slice, slice.length);\r\n        return createRowProxy(this);\r\n    }\r\n    public keys() {\r\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\r\n    }\r\n    public values() {\r\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\r\n    }\r\n    public getKey(idx: number): K['TValue'] {\r\n        return this[kParent].getChildAt(0)!.get(idx);\r\n    }\r\n    public getIndex(key: K['TValue']): number {\r\n        return this[kParent].getChildAt(0)!.indexOf(key);\r\n    }\r\n    public getValue(index: number): V['TValue'] | null {\r\n        return this[kParent].getChildAt(1)!.get(index);\r\n    }\r\n    public setValue(index: number, value: V['TValue'] | null): void {\r\n        this[kParent].getChildAt(1)!.set(index, value);\r\n    }\r\n}\r\n\r\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\r\n    constructor(parent: StructVector<T>) {\r\n        super(parent, parent.type.children.length);\r\n        return defineRowProxyProperties(this);\r\n    }\r\n    public *keys() {\r\n        for (const field of this[kParent].type.children) {\r\n            yield field.name as keyof T;\r\n        }\r\n    }\r\n    public *values() {\r\n        for (const field of this[kParent].type.children) {\r\n            yield (this as RowLike<T>)[field.name];\r\n        }\r\n    }\r\n    public getKey(idx: number): keyof T {\r\n        return this[kParent].type.children[idx].name as keyof T;\r\n    }\r\n    public getIndex(key: keyof T): number {\r\n        return this[kParent].type.children.findIndex((f) => f.name === key);\r\n    }\r\n    public getValue(index: number): T[keyof T]['TValue'] | null {\r\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\r\n    }\r\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\r\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\r\n    }\r\n}\r\n\r\nObject.setPrototypeOf(Row.prototype, Map.prototype);\r\n\r\n/** @ignore */\r\nconst defineRowProxyProperties = (() => {\r\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\r\n    return <T extends Row>(row: T) => {\r\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\r\n        const getter = (key: any) => function(this: T) { return this.get(key); };\r\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\r\n        for (const key of row.keys()) {\r\n            ktoi.set(key, ++idx);\r\n            desc.get = getter(key);\r\n            desc.set = setter(key);\r\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\r\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\r\n        }\r\n        desc.get = desc.set = null;\r\n        return row;\r\n    };\r\n})();\r\n\r\n/** @ignore */\r\nconst createRowProxy = (() => {\r\n    if (typeof Proxy === 'undefined') {\r\n        return defineRowProxyProperties;\r\n    }\r\n    const has = Row.prototype.has;\r\n    const get = Row.prototype.get;\r\n    const set = Row.prototype.set;\r\n    const getKey = Row.prototype.getKey;\r\n    const RowProxyHandler: ProxyHandler<Row> = {\r\n        isExtensible() { return false; },\r\n        deleteProperty() { return false; },\r\n        preventExtensions() { return true; },\r\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\r\n        has(row: Row, key: PropertyKey) {\r\n            switch (key) {\r\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\r\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\r\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\r\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\r\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\r\n                    return true;\r\n            }\r\n            if (typeof key === 'number' && !row.has(key)) {\r\n                key = row.getKey(key);\r\n            }\r\n            return row.has(key);\r\n        },\r\n        get(row: Row, key: PropertyKey, receiver: any) {\r\n            switch (key) {\r\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\r\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\r\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\r\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\r\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\r\n                    return Reflect.get(row, key, receiver);\r\n            }\r\n            if (typeof key === 'number' && !has.call(receiver, key)) {\r\n                key = getKey.call(receiver, key);\r\n            }\r\n            return get.call(receiver, key);\r\n        },\r\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\r\n            switch (key) {\r\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\r\n                    return Reflect.set(row, key, val, receiver);\r\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\r\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\r\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\r\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\r\n                case Symbol.iterator: case Symbol.toStringTag:\r\n                    return false;\r\n            }\r\n            if (typeof key === 'number' && !has.call(receiver, key)) {\r\n                key = getKey.call(receiver, key);\r\n            }\r\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\r\n        },\r\n    };\r\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\r\n})();\r\n"]}