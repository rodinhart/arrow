{"version":3,"sources":["vector/map.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,+DAA+D;AAC/D,wDAAwD;AACxD,6DAA6D;AAC7D,oDAAoD;AACpD,6DAA6D;AAC7D,6DAA6D;AAC7D,EAAE;AACF,+CAA+C;AAC/C,EAAE;AACF,6DAA6D;AAC7D,8DAA8D;AAC9D,yDAAyD;AACzD,4DAA4D;AAC5D,0DAA0D;AAC1D,qBAAqB;AAErB,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AACpC,OAAO,EAA0B,IAAI,EAAE,MAAM,SAAS,CAAC;AAEvD,cAAc;AACd,MAAM,OAAO,SAA8D,SAAQ,UAAsB;IAC9F,MAAM;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAwC,CAAC;QAC3E,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAA+B,KAAK,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IACM,IAAI,CAAC,KAAa;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAA+B,CAAC,CAAC,CAAC;QAC/D,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/D,OAAO,IAAI,MAAM,CAAC,KAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IAChD,CAAC;CACJ","file":"map.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { MapRow } from './row';\r\nimport { Field } from '../schema';\r\nimport { Vector } from '../vector';\r\nimport { BaseVector } from './base';\r\nimport { DataType, Map_, Struct, List } from '../type';\r\n\r\n/** @ignore */\r\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\r\n    public asList() {\r\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\r\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\r\n    }\r\n    public bind(index: number): Map_<K, V>['TValue'] {\r\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\r\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\r\n        return new MapRow(child!.slice(begin, end));\r\n    }\r\n}\r\n"]}