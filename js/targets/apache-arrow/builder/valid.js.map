{"version":3,"sources":["builder/valid.ts"],"names":[],"mappings":";AAAA,6DAA6D;AAC7D,+DAA+D;AAC/D,wDAAwD;AACxD,6DAA6D;AAC7D,oDAAoD;AACpD,6DAA6D;AAC7D,6DAA6D;AAC7D,EAAE;AACF,+CAA+C;AAC/C,EAAE;AACF,6DAA6D;AAC7D,8DAA8D;AAC9D,yDAAyD;AACzD,4DAA4D;AAC5D,0DAA0D;AAC1D,qBAAqB;;;AAGrB,2CAA+C;AAC/C,2CAAiD;AAEjD;;;;;;;;;;;;;;;;;;;GAmBG;AACH,SAAgB,qBAAqB,CAAwC,UAAiC;IAE1G,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;QACvC,aAAa;QACb,OAAO,SAAS,OAAO,CAAC,KAAU,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAE/C,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,GAAG;kBACC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;eACrB,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;;MAEpC,CAAC;KACF;IAED,uEAAuE;IACvE,2EAA2E;IAC3E,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;QACrC,MAAM,GAAG,+BAA+B,MAAM,EAAE,CAAC;KACpD;IAED,OAAO,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,MAAM,gBAAgB,CAA4C,CAAC;AACnG,CAAC;AAzBD,sDAyBC;AAED,cAAc;AACd,SAAS,WAAW,CAAC,CAAM;IACvB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvB,OAAO,sBAAa,CAAC,CAAC,CAAC,CAAC;KAC3B;SAAM,IAAI,wBAAe,EAAE;QACxB,OAAO,GAAG,sBAAa,CAAC,CAAC,CAAC,GAAG,CAAC;KACjC;IACD,OAAO,IAAI,sBAAa,CAAC,CAAC,CAAC,GAAG,CAAC;AACnC,CAAC","file":"valid.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { DataType } from '../type';\r\nimport { valueToString } from '../util/pretty';\r\nimport { BigIntAvailable } from '../util/compat';\r\n\r\n/**\r\n * Dynamically compile the null values into an `isValid()` function whose\r\n * implementation is a switch statement. Microbenchmarks in v8 indicate\r\n * this approach is 25% faster than using an ES6 Map.\r\n *\r\n * @example\r\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\r\n * `function (x) {\r\n *     if (x !== x) return false;\r\n *     switch (x) {\r\n *         case null:\r\n *         case \"N/A\":\r\n *             return false;\r\n *     }\r\n *     return true;\r\n * }`\r\n *\r\n * @ignore\r\n * @param nullValues\r\n */\r\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\r\n\r\n    if (!nullValues || nullValues.length <= 0) {\r\n        // @ts-ignore\r\n        return function isValid(value: any) { return true; };\r\n    }\r\n\r\n    let fnBody = '';\r\n    let noNaNs = nullValues.filter((x) => x === x);\r\n\r\n    if (noNaNs.length > 0) {\r\n        fnBody = `\r\n    switch (x) {${noNaNs.map((x) => `\r\n        case ${valueToCase(x)}:`).join('')}\r\n            return false;\r\n    }`;\r\n    }\r\n\r\n    // NaN doesn't equal anything including itself, so it doesn't work as a\r\n    // switch case. Instead we must explicitly check for NaN before the switch.\r\n    if (nullValues.length !== noNaNs.length) {\r\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\r\n    }\r\n\r\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\r\n}\r\n\r\n/** @ignore */\r\nfunction valueToCase(x: any) {\r\n    if (typeof x !== 'bigint') {\r\n        return valueToString(x);\r\n    } else if (BigIntAvailable) {\r\n        return `${valueToString(x)}n`;\r\n    }\r\n    return `\"${valueToString(x)}\"`;\r\n}\r\n"]}