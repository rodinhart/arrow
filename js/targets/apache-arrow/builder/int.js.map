{"version":3,"sources":["builder/int.ts"],"names":[],"mappings":";AAAA,6DAA6D;AAC7D,+DAA+D;AAC/D,wDAAwD;AACxD,6DAA6D;AAC7D,oDAAoD;AACpD,6DAA6D;AAC7D,6DAA6D;AAC7D,EAAE;AACF,+CAA+C;AAC/C,EAAE;AACF,6DAA6D;AAC7D,8DAA8D;AAC9D,yDAAyD;AACzD,4DAA4D;AAC5D,0DAA0D;AAC1D,qBAAqB;;;AAErB,mCAA4C;AAC5C,qCAA6C;AAC7C,2CAA+C;AAC/C,wCAA+D;AAG/D,cAAc;AACd,MAAa,UAA6C,SAAQ,2BAA2B;IAClF,QAAQ,CAAC,KAAa,EAAE,KAAkB;QAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;CACJ;AAJD,gCAIC;AAED,cAAc;AACd,MAAa,WAAyB,SAAQ,UAAuB;CAAG;AAAxE,kCAAwE;AACxE,cAAc;AACd,MAAa,YAA0B,SAAQ,UAAwB;CAAG;AAA1E,oCAA0E;AAC1E,cAAc;AACd,MAAa,YAA0B,SAAQ,UAAwB;CAAG;AAA1E,oCAA0E;AAC1E,cAAc;AACd,MAAa,YAA0B,SAAQ,UAAwB;IAEnE,YAAY,OAAqC;QAC7C,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACvB,OAAO,CAAC,YAAY,CAAC,GAAI,OAAO,CAAC,YAAY,CAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC5E;QACD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,0BAAiB,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD,IAAW,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,OAAO,CAAC,KAAkC,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CAChG;AAXD,oCAWC;AAED,cAAc;AACd,MAAa,YAA0B,SAAQ,UAAwB;CAAG;AAA1E,oCAA0E;AAC1E,cAAc;AACd,MAAa,aAA2B,SAAQ,UAAyB;CAAG;AAA5E,sCAA4E;AAC5E,cAAc;AACd,MAAa,aAA2B,SAAQ,UAAyB;CAAG;AAA5E,sCAA4E;AAC5E,cAAc;AACd,MAAa,aAA2B,SAAQ,UAAyB;IAErE,YAAY,OAAsC;QAC9C,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACvB,OAAO,CAAC,YAAY,CAAC,GAAI,OAAO,CAAC,YAAY,CAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC5E;QACD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,0BAAiB,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,IAAW,QAAQ,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,OAAO,CAAC,KAAmC,IAAI,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CACjG;AAXD,sCAWC;AAED,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,KAAU,EAAE,EAAE;IAC5C,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACnC,KAAK,GAAG,mBAAc,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;IACD,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,sBAAa,EAAE,CAAC,CAAC","file":"int.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { bignumToBigInt } from '../util/bn';\r\nimport { WideBufferBuilder } from './buffer';\r\nimport { BigInt64Array } from '../util/compat';\r\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\r\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\r\n\r\n/** @ignore */\r\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\r\n    public setValue(index: number, value: T['TValue']) {\r\n        this._values.set(index, value);\r\n    }\r\n}\r\n\r\n/** @ignore */\r\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\r\n/** @ignore */\r\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\r\n/** @ignore */\r\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\r\n/** @ignore */\r\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\r\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\r\n    constructor(options: BuilderOptions<Int64, TNull>) {\r\n        if (options['nullValues']) {\r\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\r\n        }\r\n        super(options);\r\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\r\n    }\r\n    public get values64() { return this._values.buffer64; }\r\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\r\n}\r\n\r\n/** @ignore */\r\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\r\n/** @ignore */\r\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\r\n/** @ignore */\r\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\r\n/** @ignore */\r\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\r\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\r\n    constructor(options: BuilderOptions<Uint64, TNull>) {\r\n        if (options['nullValues']) {\r\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\r\n        }\r\n        super(options);\r\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\r\n    }\r\n    public get values64() { return this._values.buffer64; }\r\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\r\n}\r\n\r\nconst toBigInt = ((memo: any) => (value: any) => {\r\n    if (ArrayBuffer.isView(value)) {\r\n        memo.buffer = value.buffer;\r\n        memo.byteOffset = value.byteOffset;\r\n        memo.byteLength = value.byteLength;\r\n        value = bignumToBigInt(memo);\r\n        memo.buffer = null;\r\n    }\r\n    return value;\r\n})({ 'BigIntArray': BigInt64Array });\r\n"]}