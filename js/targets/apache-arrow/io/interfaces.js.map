{"version":3,"sources":["io/interfaces.ts"],"names":[],"mappings":"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","file":"interfaces.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport streamAdapters from './adapters';\r\n\r\n/** @ignore */\r\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\r\n\r\n/** @ignore */\r\nexport type FileHandle = import('fs').promises.FileHandle;\r\n/** @ignore */\r\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\r\n/** @ignore */\r\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\r\n\r\n/** @ignore */\r\nexport class ArrowJSON {\r\n    // @ts-ignore\r\n    constructor(private _json: ArrowJSONLike) {}\r\n    public get schema(): any { return this._json['schema']; }\r\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\r\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\r\n}\r\n\r\n/** @ignore */\r\nexport interface Readable<T> {\r\n\r\n    readonly closed: Promise<void>;\r\n    cancel(reason?: any): Promise<void>;\r\n\r\n    read(size?: number | null): Promise<T | null>;\r\n    peek(size?: number | null): Promise<T | null>;\r\n    throw(value?: any): Promise<IteratorResult<any>>;\r\n    return(value?: any): Promise<IteratorResult<any>>;\r\n    next(size?: number | null): Promise<IteratorResult<T>>;\r\n}\r\n\r\n/** @ignore */\r\nexport interface Writable<T> {\r\n    readonly closed: Promise<void>;\r\n    close(): void;\r\n    write(chunk: T): void;\r\n    abort(reason?: any): void;\r\n}\r\n\r\n/** @ignore */\r\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\r\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\r\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\r\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\r\n}\r\n\r\n/** @ignore */\r\nexport abstract class ReadableInterop<T> {\r\n\r\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\r\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\r\n\r\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\r\n        return this._getDOMStream().tee();\r\n    }\r\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\r\n        return this._getNodeStream().pipe(writable, options);\r\n    }\r\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\r\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\r\n        return this._getDOMStream().pipeThrough(duplex, options);\r\n    }\r\n\r\n    protected _DOMStream?: ReadableStream<T>;\r\n    private _getDOMStream() {\r\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\r\n    }\r\n\r\n    protected _nodeStream?: import('stream').Readable;\r\n    private _getNodeStream() {\r\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\r\n    }\r\n}\r\n\r\n/** @ignore */\r\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\r\n\r\n/** @ignore */\r\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\r\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\r\n\r\n    protected _values: TWritable[] = [];\r\n    protected _error?: { error: any; };\r\n    protected _closedPromise: Promise<void>;\r\n    protected _closedPromiseResolve?: (value?: any) => void;\r\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\r\n\r\n    constructor() {\r\n        super();\r\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\r\n    }\r\n\r\n    public get closed(): Promise<void> { return this._closedPromise; }\r\n    public async cancel(reason?: any) { await this.return(reason); }\r\n    public write(value: TWritable) {\r\n        if (this._ensureOpen()) {\r\n            this.resolvers.length <= 0\r\n                ? (this._values.push(value))\r\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\r\n        }\r\n    }\r\n    public abort(value?: any) {\r\n        if (this._closedPromiseResolve) {\r\n            this.resolvers.length <= 0\r\n                ? (this._error = { error: value })\r\n                : (this.resolvers.shift()!.reject({ done: true, value }));\r\n        }\r\n    }\r\n    public close() {\r\n        if (this._closedPromiseResolve) {\r\n            const { resolvers } = this;\r\n            while (resolvers.length > 0) {\r\n                resolvers.shift()!.resolve(ITERATOR_DONE);\r\n            }\r\n            this._closedPromiseResolve();\r\n            this._closedPromiseResolve = undefined;\r\n        }\r\n    }\r\n\r\n    public [Symbol.asyncIterator]() { return this; }\r\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\r\n        return streamAdapters.toDOMStream(\r\n            (this._closedPromiseResolve || this._error)\r\n                ? (this as AsyncIterable<TReadable>)\r\n                : (this._values as any) as Iterable<TReadable>,\r\n            options);\r\n    }\r\n    public toNodeStream(options?: import('stream').ReadableOptions) {\r\n        return streamAdapters.toNodeStream(\r\n            (this._closedPromiseResolve || this._error)\r\n                ? (this as AsyncIterable<TReadable>)\r\n                : (this._values as any) as Iterable<TReadable>,\r\n            options);\r\n    }\r\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\r\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\r\n\r\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\r\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\r\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\r\n        if (this._values.length > 0) {\r\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\r\n        } else if (this._error) {\r\n            return Promise.reject({ done: true, value: this._error.error });\r\n        } else if (!this._closedPromiseResolve) {\r\n            return Promise.resolve(ITERATOR_DONE);\r\n        } else {\r\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\r\n                this.resolvers.push({ resolve, reject });\r\n            });\r\n        }\r\n    }\r\n\r\n    protected _ensureOpen() {\r\n        if (this._closedPromiseResolve) {\r\n            return true;\r\n        }\r\n        throw new Error(`${this} is closed`);\r\n    }\r\n}\r\n"]}