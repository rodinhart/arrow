{"version":3,"sources":["io/whatwg/iterable.ts"],"names":[],"mappings":"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","file":"iterable.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { toUint8Array } from '../../util/buffer';\r\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\r\nimport { isIterable, isAsyncIterable } from '../../util/compat';\r\n\r\n/** @ignore */\r\ntype SourceIterator<T> = Generator<T, void, number | null>;\r\n/** @ignore */\r\ntype AsyncSourceIterator<T> = AsyncGenerator<T, void, number | null>;\r\n\r\n/** @ignore */\r\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\r\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\r\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\r\n    /* istanbul ignore next */\r\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\r\n}\r\n\r\n/** @ignore */\r\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\r\n\r\n    let it: SourceIterator<T> | null = null;\r\n    const bm = (options && options.type === 'bytes') || false;\r\n    const hwm = options && options.highWaterMark || (2 ** 24);\r\n\r\n    return new ReadableStream<T>({\r\n        ...options as any,\r\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]() as SourceIterator<T>)); },\r\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\r\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\r\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\r\n\r\n    function next(controller: ReadableStreamDefaultController<T>, it: SourceIterator<T>) {\r\n        let buf: Uint8Array;\r\n        let r: IteratorResult<T> | null = null;\r\n        let size = controller.desiredSize || null;\r\n        while (!(r = it.next(bm ? size : null)).done) {\r\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\r\n                size != null && bm && (size = size - buf.byteLength + 1);\r\n                r.value = <any> buf;\r\n            }\r\n            controller.enqueue(r.value);\r\n            if (size != null && --size <= 0) { return; }\r\n        }\r\n        controller.close();\r\n    }\r\n}\r\n\r\n/** @ignore */\r\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\r\n\r\n    let it: AsyncSourceIterator<T> | null = null;\r\n    const bm = (options && options.type === 'bytes') || false;\r\n    const hwm = options && options.highWaterMark || (2 ** 24);\r\n\r\n    return new ReadableStream<T>({\r\n        ...options as any,\r\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]() as AsyncSourceIterator<T>)); },\r\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\r\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\r\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\r\n\r\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncSourceIterator<T>) {\r\n        let buf: Uint8Array;\r\n        let r: IteratorResult<T> | null = null;\r\n        let size = controller.desiredSize || null;\r\n        while (!(r = await it.next(bm ? size : null)).done) {\r\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\r\n                size != null && bm && (size = size - buf.byteLength + 1);\r\n                r.value = <any> buf;\r\n            }\r\n            controller.enqueue(r.value);\r\n            if (size != null && --size <= 0) { return; }\r\n        }\r\n        controller.close();\r\n    }\r\n}\r\n"]}