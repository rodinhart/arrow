{"version":3,"sources":["visitor/vectorctor.ts"],"names":[],"mappings":"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","file":"vectorctor.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\nimport { Data } from '../data';\r\nimport { Type } from '../enum';\r\nimport { DataType } from '../type';\r\nimport { Visitor } from '../visitor';\r\nimport { VectorType, VectorCtor } from '../interfaces';\r\n\r\nimport { BinaryVector } from '../vector/binary';\r\nimport { BoolVector } from '../vector/bool';\r\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\r\nimport { DecimalVector } from '../vector/decimal';\r\nimport { DictionaryVector } from '../vector/dictionary';\r\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\r\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\r\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\r\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\r\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\r\nimport { ListVector } from '../vector/list';\r\nimport { MapVector } from '../vector/map';\r\nimport { NullVector } from '../vector/null';\r\nimport { StructVector } from '../vector/struct';\r\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\r\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\r\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\r\nimport { Utf8Vector } from '../vector/utf8';\r\n\r\n/** @ignore */\r\nexport interface GetVectorConstructor extends Visitor {\r\n    visit<T extends Type>(node: T): VectorCtor<T>;\r\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\r\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\r\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\r\n}\r\n\r\n/** @ignore */\r\nexport class GetVectorConstructor extends Visitor {\r\n    public visitNull                 () { return NullVector; }\r\n    public visitBool                 () { return BoolVector; }\r\n    public visitInt                  () { return IntVector; }\r\n    public visitInt8                 () { return Int8Vector; }\r\n    public visitInt16                () { return Int16Vector; }\r\n    public visitInt32                () { return Int32Vector; }\r\n    public visitInt64                () { return Int64Vector; }\r\n    public visitUint8                () { return Uint8Vector; }\r\n    public visitUint16               () { return Uint16Vector; }\r\n    public visitUint32               () { return Uint32Vector; }\r\n    public visitUint64               () { return Uint64Vector; }\r\n    public visitFloat                () { return FloatVector; }\r\n    public visitFloat16              () { return Float16Vector; }\r\n    public visitFloat32              () { return Float32Vector; }\r\n    public visitFloat64              () { return Float64Vector; }\r\n    public visitUtf8                 () { return Utf8Vector; }\r\n    public visitBinary               () { return BinaryVector; }\r\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\r\n    public visitDate                 () { return DateVector; }\r\n    public visitDateDay              () { return DateDayVector; }\r\n    public visitDateMillisecond      () { return DateMillisecondVector; }\r\n    public visitTimestamp            () { return TimestampVector; }\r\n    public visitTimestampSecond      () { return TimestampSecondVector; }\r\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\r\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\r\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\r\n    public visitTime                 () { return TimeVector; }\r\n    public visitTimeSecond           () { return TimeSecondVector; }\r\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\r\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\r\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\r\n    public visitDecimal              () { return DecimalVector; }\r\n    public visitList                 () { return ListVector; }\r\n    public visitStruct               () { return StructVector; }\r\n    public visitUnion                () { return UnionVector; }\r\n    public visitDenseUnion           () { return DenseUnionVector; }\r\n    public visitSparseUnion          () { return SparseUnionVector; }\r\n    public visitDictionary           () { return DictionaryVector; }\r\n    public visitInterval             () { return IntervalVector; }\r\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\r\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\r\n    public visitFixedSizeList        () { return FixedSizeListVector; }\r\n    public visitMap                  () { return MapVector; }\r\n}\r\n\r\n/** @ignore */\r\nexport const instance = new GetVectorConstructor();\r\n"]}