{"version":3,"sources":["type.ts"],"names":[],"mappings":"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","file":"type.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\r\n// or more contributor license agreements.  See the NOTICE file\r\n// distributed with this work for additional information\r\n// regarding copyright ownership.  The ASF licenses this file\r\n// to you under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance\r\n// with the License.  You may obtain a copy of the License at\r\n//\r\n//   http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing,\r\n// software distributed under the License is distributed on an\r\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied.  See the License for the\r\n// specific language governing permissions and limitations\r\n// under the License.\r\n\r\n/* tslint:disable:class-name */\r\n\r\nimport { Field } from './schema';\r\nimport { flatbuffers } from 'flatbuffers';\r\nimport { TypedArrayConstructor } from './interfaces';\r\nimport { VectorType as V, TypeToDataType } from './interfaces';\r\nimport { instance as comparer } from './visitor/typecomparator';\r\n\r\nimport Long = flatbuffers.Long;\r\nimport {\r\n    Type,\r\n    Precision, UnionMode,\r\n    DateUnit, TimeUnit, IntervalUnit\r\n} from './enum';\r\n\r\n/** @ignore */\r\nexport type TimeBitWidth = 32 | 64;\r\n/** @ignore */\r\nexport type IntBitWidth = 8 | 16 | 32 | 64;\r\n/** @ignore */\r\nexport type IsSigned = { 'true': true; 'false': false };\r\n/** @ignore */\r\nexport type RowLike<T extends { [key: string]: DataType }> =\r\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\r\n    & { [P in keyof T]: T[P]['TValue'] | null }\r\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\r\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\r\n    ;\r\n\r\n/** @ignore */\r\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\r\n      { [P in K['TValue']]: V['TValue'] | null }\r\n    & ( Map<K['TValue'], V['TValue'] | null> )\r\n    ;\r\n\r\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\r\n    readonly TType: TType;\r\n    readonly TArray: any;\r\n    readonly TValue: any;\r\n    readonly ArrayType: any;\r\n    readonly children: Field<TChildren[keyof TChildren]>[];\r\n}\r\n\r\n/**\r\n * An abstract base class for classes that encapsulate metadata about each of\r\n * the logical types that Arrow can represent.\r\n */\r\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\r\n\r\n    // @ts-ignore\r\n    public [Symbol.toStringTag]: string;\r\n\r\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\r\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\r\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\r\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\r\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\r\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\r\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\r\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\r\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\r\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\r\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\r\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\r\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\r\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\r\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\r\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\r\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\r\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\r\n\r\n    public get typeId(): TType { return <any> Type.NONE; }\r\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\r\n        return comparer.visit(this, other);\r\n    }\r\n\r\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\r\n        (<any> proto).children = null;\r\n        (<any> proto).ArrayType = Array;\r\n        return proto[Symbol.toStringTag] = 'DataType';\r\n    })(DataType.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\r\n/** @ignore */\r\nexport class Null extends DataType<Type.Null> {\r\n    public toString() { return `Null`; }\r\n    public get typeId() { return Type.Null as Type.Null; }\r\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\r\n        return proto[Symbol.toStringTag] = 'Null';\r\n    })(Null.prototype);\r\n}\r\n\r\n/** @ignore */\r\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\r\n/** @ignore */\r\ntype IType = {\r\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\r\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\r\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\r\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\r\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\r\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\r\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\r\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\r\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\r\n};\r\n\r\n/** @ignore */\r\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\r\n/** @ignore */\r\nclass Int_<T extends Ints = Ints> extends DataType<T> {\r\n    constructor(public readonly isSigned: IType[T]['isSigned'],\r\n                public readonly bitWidth: IType[T]['bitWidth']) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Int as T; }\r\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\r\n        switch (this.bitWidth) {\r\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\r\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\r\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\r\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\r\n        }\r\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\r\n    }\r\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\r\n        (<any> proto).isSigned = null;\r\n        (<any> proto).bitWidth = null;\r\n        return proto[Symbol.toStringTag] = 'Int';\r\n    })(Int_.prototype);\r\n}\r\n\r\nexport { Int_ as Int };\r\n\r\n/** @ignore */\r\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\r\n/** @ignore */\r\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\r\n/** @ignore */\r\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\r\n/** @ignore */\r\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\r\n/** @ignore */\r\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\r\n/** @ignore */\r\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\r\n/** @ignore */\r\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\r\n/** @ignore */\r\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\r\n\r\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\r\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\r\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\r\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\r\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\r\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\r\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\r\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\r\n\r\n/** @ignore */\r\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\r\n/** @ignore */\r\ntype FType = {\r\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\r\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\r\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\r\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\r\n};\r\n\r\n/** @ignore */\r\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\r\n/** @ignore */\r\nexport class Float<T extends Floats = Floats> extends DataType<T> {\r\n    constructor(public readonly precision: Precision) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Float as T; }\r\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\r\n        switch (this.precision) {\r\n            case Precision.HALF: return Uint16Array;\r\n            case Precision.SINGLE: return Float32Array;\r\n            case Precision.DOUBLE: return Float64Array;\r\n        }\r\n        // @ts-ignore\r\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\r\n    }\r\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\r\n        (<any> proto).precision = null;\r\n        return proto[Symbol.toStringTag] = 'Float';\r\n    })(Float.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\r\n/** @ignore */\r\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\r\n/** @ignore */\r\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\r\n\r\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\r\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\r\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\r\n\r\n/** @ignore */\r\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\r\n/** @ignore */\r\nexport class Binary extends DataType<Type.Binary> {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Binary as Type.Binary; }\r\n    public toString() { return `Binary`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\r\n        (<any> proto).ArrayType = Uint8Array;\r\n        return proto[Symbol.toStringTag] = 'Binary';\r\n    })(Binary.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\r\n/** @ignore */\r\nexport class Utf8 extends DataType<Type.Utf8> {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\r\n    public toString() { return `Utf8`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\r\n        (<any> proto).ArrayType = Uint8Array;\r\n        return proto[Symbol.toStringTag] = 'Utf8';\r\n    })(Utf8.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\r\n/** @ignore */\r\nexport class Bool extends DataType<Type.Bool> {\r\n    constructor() {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Bool as Type.Bool; }\r\n    public toString() { return `Bool`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\r\n        (<any> proto).ArrayType = Uint8Array;\r\n        return proto[Symbol.toStringTag] = 'Bool';\r\n    })(Bool.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\r\n/** @ignore */\r\nexport class Decimal extends DataType<Type.Decimal> {\r\n    constructor(public readonly scale: number,\r\n                public readonly precision: number) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Decimal as Type.Decimal; }\r\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\r\n        (<any> proto).scale = null;\r\n        (<any> proto).precision = null;\r\n        (<any> proto).ArrayType = Uint32Array;\r\n        return proto[Symbol.toStringTag] = 'Decimal';\r\n    })(Decimal.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\r\n/** @ignore */\r\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\r\n/** @ignore */\r\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\r\n    constructor(public readonly unit: DateUnit) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Date as T; }\r\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\r\n        (<any> proto).unit = null;\r\n        (<any> proto).ArrayType = Int32Array;\r\n        return proto[Symbol.toStringTag] = 'Date';\r\n    })(Date_.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\r\n/** @ignore */\r\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\r\n\r\n/** @ignore */\r\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\r\n/** @ignore */\r\ntype TimesType = {\r\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\r\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\r\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\r\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\r\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\r\n};\r\n\r\n/** @ignore */\r\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\r\n/** @ignore */\r\nclass Time_<T extends Times = Times> extends DataType<T> {\r\n    constructor(public readonly unit: TimesType[T]['unit'],\r\n                public readonly bitWidth: TimeBitWidth) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Time as T; }\r\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\r\n        (<any> proto).unit = null;\r\n        (<any> proto).bitWidth = null;\r\n        (<any> proto).ArrayType = Int32Array;\r\n        return proto[Symbol.toStringTag] = 'Time';\r\n    })(Time_.prototype);\r\n}\r\n\r\nexport { Time_ as Time };\r\n\r\n/** @ignore */\r\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\r\n/** @ignore */\r\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\r\n/** @ignore */\r\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\r\n/** @ignore */\r\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\r\n\r\n/** @ignore */\r\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\r\n/** @ignore */\r\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\r\n/** @ignore */\r\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\r\n    constructor(public readonly unit: TimeUnit,\r\n                public readonly timezone?: string | null) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Timestamp as T; }\r\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\r\n        (<any> proto).unit = null;\r\n        (<any> proto).timezone = null;\r\n        (<any> proto).ArrayType = Int32Array;\r\n        return proto[Symbol.toStringTag] = 'Timestamp';\r\n    })(Timestamp_.prototype);\r\n}\r\n\r\nexport { Timestamp_ as Timestamp };\r\n\r\n/** @ignore */\r\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\r\n/** @ignore */\r\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\r\n/** @ignore */\r\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\r\n/** @ignore */\r\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\r\n\r\n/** @ignore */\r\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\r\n/** @ignore */\r\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\r\n/** @ignore */\r\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\r\n    constructor(public readonly unit: IntervalUnit) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.Interval as T; }\r\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\r\n        (<any> proto).unit = null;\r\n        (<any> proto).ArrayType = Int32Array;\r\n        return proto[Symbol.toStringTag] = 'Interval';\r\n    })(Interval_.prototype);\r\n}\r\n\r\nexport { Interval_ as Interval };\r\n\r\n/** @ignore */\r\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\r\n/** @ignore */\r\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\r\n\r\n/** @ignore */\r\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\r\n/** @ignore */\r\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\r\n    constructor(child: Field<T>) {\r\n        super();\r\n        this.children = [child];\r\n    }\r\n    public readonly children: Field<T>[];\r\n    public get typeId() { return Type.List as Type.List; }\r\n    public toString() { return `List<${this.valueType}>`; }\r\n    public get valueType(): T { return this.children[0].type as T; }\r\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\r\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\r\n    protected static [Symbol.toStringTag] = ((proto: List) => {\r\n        (<any> proto).children = null;\r\n        return proto[Symbol.toStringTag] = 'List';\r\n    })(List.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\r\n/** @ignore */\r\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\r\n    public readonly children: Field<T[keyof T]>[];\r\n    constructor(children: Field<T[keyof T]>[]) {\r\n        super();\r\n        this.children = children;\r\n    }\r\n    public get typeId() { return Type.Struct as Type.Struct; }\r\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\r\n        (<any> proto).children = null;\r\n        return proto[Symbol.toStringTag] = 'Struct';\r\n    })(Struct.prototype);\r\n}\r\n\r\n/** @ignore */\r\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\r\n/** @ignore */\r\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\r\n/** @ignore */\r\nclass Union_<T extends Unions = Unions> extends DataType<T> {\r\n    public readonly mode: UnionMode;\r\n    public readonly typeIds: Int32Array;\r\n    public readonly children: Field<any>[];\r\n    public readonly typeIdToChildIndex: { [key: number]: number };\r\n    constructor(mode: UnionMode,\r\n                typeIds: number[] | Int32Array,\r\n                children: Field<any>[]) {\r\n        super();\r\n        this.mode = mode;\r\n        this.children = children;\r\n        this.typeIds = typeIds = Int32Array.from(typeIds);\r\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\r\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\r\n        }, Object.create(null) as { [key: number]: number });\r\n    }\r\n    public get typeId() { return Type.Union as T; }\r\n    public toString() { return `${this[Symbol.toStringTag]}<${\r\n        this.children.map((x) => `${x.type}`).join(` | `)\r\n    }>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\r\n        (<any> proto).mode = null;\r\n        (<any> proto).typeIds = null;\r\n        (<any> proto).children = null;\r\n        (<any> proto).typeIdToChildIndex = null;\r\n        (<any> proto).ArrayType = Int8Array;\r\n        return proto[Symbol.toStringTag] = 'Union';\r\n    })(Union_.prototype);\r\n}\r\n\r\nexport { Union_ as Union };\r\n\r\n/** @ignore */\r\nexport class DenseUnion extends Union_<Type.DenseUnion> {\r\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\r\n        super(UnionMode.Dense, typeIds, children);\r\n    }\r\n}\r\n\r\n/** @ignore */\r\nexport class SparseUnion extends Union_<Type.SparseUnion> {\r\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\r\n        super(UnionMode.Sparse, typeIds, children);\r\n    }\r\n}\r\n\r\n/** @ignore */\r\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\r\n/** @ignore */\r\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\r\n    constructor(public readonly byteWidth: number) {\r\n        super();\r\n    }\r\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\r\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\r\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\r\n        (<any> proto).byteWidth = null;\r\n        (<any> proto).ArrayType = Uint8Array;\r\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\r\n    })(FixedSizeBinary.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\r\n/** @ignore */\r\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\r\n    public readonly children: Field<T>[];\r\n    constructor(public readonly listSize: number, child: Field<T>) {\r\n        super();\r\n        this.children = [child];\r\n    }\r\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\r\n    public get valueType(): T { return this.children[0].type as T; }\r\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\r\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\r\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\r\n        (<any> proto).children = null;\r\n        (<any> proto).listSize = null;\r\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\r\n    })(FixedSizeList.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\r\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\r\n    TChild: Struct<{ key: TKey, value: TValue }>;\r\n    TValue: MapLike<TKey, TValue>;\r\n}\r\n\r\n/** @ignore */\r\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\r\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\r\n        super();\r\n        this.children = [child];\r\n        this.keysSorted = keysSorted;\r\n    }\r\n    public readonly keysSorted: boolean;\r\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\r\n    public get typeId() { return Type.Map as Type.Map; }\r\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\r\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\r\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\r\n        (<any> proto).children = null;\r\n        (<any> proto).keysSorted = null;\r\n        return proto[Symbol.toStringTag] = 'Map_';\r\n    })(Map_.prototype);\r\n}\r\n\r\n/** @ignore */\r\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\r\n\r\n/** @ignore */\r\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\r\n\r\n/** @ignore */\r\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\r\n/** @ignore */\r\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\r\n    public readonly id: number;\r\n    public readonly indices: TKey;\r\n    public readonly dictionary: T;\r\n    public readonly isOrdered: boolean;\r\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\r\n        super();\r\n        this.indices = indices;\r\n        this.dictionary = dictionary;\r\n        this.isOrdered = isOrdered || false;\r\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\r\n    }\r\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\r\n    public get children() { return this.dictionary.children; }\r\n    public get valueType(): T { return this.dictionary as T; }\r\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\r\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\r\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\r\n        (<any> proto).id = null;\r\n        (<any> proto).indices = null;\r\n        (<any> proto).isOrdered = null;\r\n        (<any> proto).dictionary = null;\r\n        return proto[Symbol.toStringTag] = 'Dictionary';\r\n    })(Dictionary.prototype);\r\n}\r\n\r\n/** @ignore */\r\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\r\n/** @ignore */\r\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\r\n/** @ignore */\r\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\r\n\r\n/** @ignore */\r\nexport function strideForType(type: DataType) {\r\n    let t: any = type;\r\n    switch (type.typeId) {\r\n        case Type.Decimal: return 4;\r\n        case Type.Timestamp: return 2;\r\n        case Type.Date: return 1 + (t as Date_).unit;\r\n        case Type.Interval: return 1 + (t as Interval_).unit;\r\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\r\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\r\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\r\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\r\n        default: return 1;\r\n    }\r\n}\r\n"]}